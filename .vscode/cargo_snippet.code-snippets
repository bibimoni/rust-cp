{
  "bin_search": {
    "prefix": "bin_search",
    "body": [
      "fn bin_search(mut l: usize, mut r: usize, mut f: impl FnMut(usize) -> bool) -> (usize, usize) {",
      "    while r > l + 1 {",
      "        let mid = (r + l) / 2;",
      "        if f(mid) {",
      "            r = mid;",
      "        } else {",
      "            l = mid;",
      "        }",
      "    }",
      "    (l, r)",
      "}"
    ]
  },
  "gcd": {
    "prefix": "gcd",
    "body": [
      "fn gcd(a: u64, b: u64) -> u64 {",
      "    if b == 0 {",
      "        return a;",
      "    } else {",
      "        return gcd(a, a % b);",
      "    }",
      "}"
    ]
  },
  "read_ints": {
    "prefix": "read_ints",
    "body": [
      "fn read_ints() -> Vec<usize> {",
      "    let mut numbers: String = String::new();",
      "    io::stdin()",
      "        .read_line(&mut numbers)",
      "        .expect(\"Failed to read line\");",
      "    numbers",
      "        .trim()",
      "        .split_whitespace()",
      "        .map(|i: &str| i.parse().unwrap())",
      "        .collect()",
      "}"
    ]
  },
  "read_str": {
    "prefix": "read_str",
    "body": [
      "fn read_str() -> String {",
      "    let mut s = String::new();",
      "    std::io::stdin().read_line(&mut s).unwrap();",
      "    s.trim().to_string()",
      "}"
    ]
  }
}
